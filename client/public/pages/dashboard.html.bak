<!--
=========================================================
* Material Dashboard 2 - v3.0.0
=========================================================

* Product Page: https://www.creative-tim.com/product/material-dashboard
* Copyright 2021 Creative Tim (https://www.creative-tim.com)
* Licensed under MIT (https://www.creative-tim.com/license)
* Coded by Creative Tim

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
-->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="apple-touch-icon" sizes="76x76" href="./assets/img/apple-icon.png">
  <link rel="icon" type="image/png" href="./assets/img/favicon.png">
  <title>
    Jiu-Jitsu 3D Tutorials Technique Page
  </title>
  <!--     Fonts and icons     -->
  <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900|Roboto+Slab:400,700" />
  <!-- Font Awesome Icons -->
  <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
  <!-- Material Icons -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Round" rel="stylesheet">
  <!-- CSS Files -->
  <link id="pagestyle" href="../assets/css/dashboard-style.css" rel="stylesheet" />
  <style>
	  #animation-player>*
	  {
		  position: absolute;
		  top: 0;
		  left: 50%;
		  transform: translate(-50%, 0);
	  }
	  #animation-player
	  {
		  overflow: hidden;
		  height: 400px;
		  border-radius: 10px;
	  }
	  .position-box
	  {
		  position: absolute;
		  transform: translate(-50%, -50%);
		  width: 75px;
		  height: 50px;
		  font-size: 10px;
		  text-align: center;
		  border-radius: 2px;
		  border-style: solid;
		  border-color: #000;
		  color: #000;
		  z-index: 3;
	  }
	  #graph-box
	  {
		  position: relative;
		  max-width: 400px;
		  margin: auto;
	  }
	  .transition-line
	  {
		  position:absolute;
		  height: 4px;
		  background-color: #000;
		  z-index: 1;
		  display: none;
	  }
	  .move-box
	  {
		  width:80%;
		  margin: 10px 10%;
		  text-align: left;
		  font-weight: bold;

	  }
	  #search-result
	  {
		  max-height:300px;
		  overflow-y: scroll;
	  }
	  #move-buffer
	  {

	  }
	  #move-buffer>*
	  {
		  text-align: center;
		  font-weight: bold;
		  font-size: 24px;
	  }
  </style>
  <script type="module">

  </script>
</head>

<body class="g-sidenav-show  bg-gray-200">
  <aside class="sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3   bg-gradient-dark" id="sidenav-main">
    <div class="sidenav-header">
      <i class="fas fa-times p-3 cursor-pointer text-white opacity-5 position-absolute end-0 top-0 d-none d-xl-none" aria-hidden="true" id="iconSidenav"></i>
      <a class="navbar-brand m-0" href="./home" target="_blank">
        <span class="ms-1 font-weight-bold text-white">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Jiu-Jitsu 3D Tutorials</span>
      </a>
    </div>
    <hr class="horizontal light mt-0 mb-2">
    <div class="collapse navbar-collapse  w-auto  max-height-vh-100" id="sidenav-collapse-main">
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link text-white active bg-gradient-primary" href="./dashboard">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">dashboard</i>
            </div>
            <span class="nav-link-text ms-1">Dashboard</span>
          </a>
        </li>
        <li class="nav-item mt-3">
          <h6 class="ps-4 ms-2 text-uppercase text-xs text-white font-weight-bolder opacity-8">Account pages</h6>
        </li>
        <li class="nav-item">
          <a class="nav-link text-white " href="./profile">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">person</i>
            </div>
            <span class="nav-link-text ms-1">Profile</span>
          </a>
        </li>

      </ul>
    </div>
  </aside>
  <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg ">
    <!-- Navbar -->
    <nav class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl" id="navbarBlur" navbar-scroll="true">
      <div class="container-fluid py-1 px-3">
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5">
            <li class="breadcrumb-item text-sm text-dark active" aria-current="page">Dashboard</li>
          </ol>
          <h6 class="font-weight-bolder mb-0">Dashboard</h6>
        </nav>
        <div class="collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4" id="navbar">
          <div class="ms-md-auto pe-md-3 d-flex align-items-center">
            <div class="input-group input-group-outline">
              <label class="form-label">Type here...</label>
              <input type="text" class="form-control">
            </div>
          </div>
          <ul id="sign-in" class="navbar-nav  justify-content-end">
            <li class="nav-item d-flex align-items-center">
              <a href="./signin" class="nav-link text-body font-weight-bold px-0">
                <i class="fa fa-user me-sm-1"></i>
                <span class="d-sm-inline d-none">Sign In</span>
              </a>
            </li>
          </ul>
		  <ul id="logout" style="display: none" class="navbar-nav  justify-content-end">
            <li class="nav-item d-flex align-items-center">
              <a class="nav-link text-body font-weight-bold px-0">
                <i class="fa fa-user me-sm-1"></i>
                <span class="d-sm-inline d-none">Logout</span>
              </a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
    <!-- End Navbar -->
    <div class="container-fluid py-4">
      <div class="row mt-4">
        <div class="col-lg-6 col-md-6 mt-4 mb-4">
          <div class="card z-index-2 bg-dark-200">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-dark-200">
              <div class="bg-white shadow-primary border-radius-lg ">
                <a class="d-block border-radius-xl">
                  <div style="height: 400px;" id="graph-box">
					  <div class="position-box" style="top:12.5%; left: 50%; background-color:#BBBBFF;">Stand Up</div>
					  <div class="position-box" style="top:37.5%; left: 16.6%; background-color:#BBBBFF;">Standing Open Guard</div>
					  <div class="position-box" style="top:37.5%; left: 50%; background-color:#BBBBFF;">Open Guard</div>
					  <div class="position-box" style="top:37.5%; left: 83.3%; background-color:#BBBBFF;">Closed Guard</div>
					  <div class="position-box" style="top:62.5%; left: 16.6%; background-color:#BBBBFF;">Half Guard</div>
					  <div class="position-box" style="top:62.5%; left: 83.3%; background-color:#BBBBFF;">Side Control</div>
					  <div class="position-box" style="top:87.5%; left: 16.6%; background-color:#BBBBFF;">Mount Control</div>
					  <div class="position-box" style="top:87.5%; left: 50%; background-color:#FFBBBB;">Submission</div>
					  <div class="position-box" style="top:87.5%; left: 83.3%; background-color:#BBBBFF;">Back Control</div>

					  <div id="2-2" class="transition-line" style="height:16.6%; width: 16.6%; left:8.3%; top: 37.5%; border-radius: 200px; transform: translate(-50%, -50%);">
						  <div style="width:calc(100% - 8px); height:calc(100% - 8px); background-color: #fff; border-radius: 100px; margin: 4px;"></div>
					  </div>
					  <div id="5-5" class="transition-line" style="height:16.6%; width: 16.6%; left:8.3%; top: 62.5%; border-radius: 200px; transform: translate(-50%, -50%);">
						 <div style="width:calc(100% - 8px); height:calc(100% - 8px); background-color: #fff; border-radius: 100px; margin: 4px;"></div>
					 </div>
				  </div>
                </a>
              </div>
            </div>
            <div class="card-body-dashboard">
              <h6 class="mb-0 ">Chart </h6>
              <p class="text-sm ">Use Search Bar Below To Add Moves</p>
            </div>
          </div>
        </div>
        <div class="col-lg-6 mt-4 mb-3">
          <div class="card z-index-2 bg-dark-200">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-dark-200">
              <div style="position:relative;" class="bg-dark-200 shadow-dark border-radius-lg">
                <a class="d-block border-radius-xl">
					<!-- HERE -->
                  <div style="position:relative;" id="animation-player"></div>
                </a>
              </div>
            </div>
            <div class="card-body-dashboard">
              <h6 class="mb-0 ">Animation </h6>
              <p class="text-sm ">Use Search Bar Below To Add Moves</p>
            </div>
          </div>
        </div>
      </div>
	  <div class="row mb-4">
		  <button id="play" style="width: 40%; margin:0 5%;">Play</button>
		  <button id="pause" style="width: 40%; margin:0 5%;">Pause</button>
		  <input style="margin:10px 5%; width: 90%;" id="jared" type="range" min="0.0" max="2.0" value="1.0" step=".25"></input>
		  <h2 style="text-align: center;">Move List</h2>
		  <div id="move-buffer"></div>
		  <button style="margin:auto; width: 23%;" id="clear">Clear</button>
		  <button style="margin:auto; width: 23%;" id="save">Save</button>
		  <button style="margin:auto; width: 23%;" id="load">Load</button>
	  </div>
      <div class="row mb-4">
        <div class="col-lg-8 col-md-6 mb-md-0 mb-4">
          <div class="card">
            <div class="card-header pb-0 bg-dark-200">
              <div class="row">
                <div class="col-lg-6 col-7">
                  <h4>Information</h4>
                </div>
              </div>
            </div>
            <div class="card-body px-0 pb-2 bg-dark-200">
              <div id="description" style="max-width: calc(100% - 48px); width: 1000000px" class="card z-index-2 mt-1 mb-5 mx-4 bg-gray-500 scroll-info">

              </div>
            </div>
          </div>
        </div>
        <div class="col-lg-4 col-md-6 ">
          <div class="card h-100 bg-dark-200">
            <div class="card-header pb-0 bg-dark-200">
              <h6>Search</h6>
              <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                <div class="input-group input-group-outline">
                  <label class="form-label"></label>
                  <input id="search-field" type="text" class="form-control">
                </div>
              </div>
            </div> <br>

            <div id="recommended-result" class="card h-100 bg-dark-200">
              <div class="card-header pb-0 bg-dark-200">
                <h6>Recommended Learning Path: </h6>
              </div>

              <div class ="dropdown">
                <div class="card-body p-3">
                  <div class="timeline timeline-one-side">
                    <div class="timeline-block mb-3">
                      <span class="timeline-step">
                        <i class="material-icons text-success text-gradient">looks_one</i>
                      </span>
                      <div class="timeline-content">
                        <h6 class="text-white text-sm font-weight-bold mb-0 ">
                          <a href="../pages/techniquelists.html"> Beginner </a>
                          <i class="fa fa-caret-down"></i>
                        </h6>
                        <p class="text-secondary font-weight-bold text-xs mt-1 mb-0">We all start here!</p>
                      </div>
                    </div>

                    <div class="timeline-block mb-3">
                      <span class="timeline-step">
                        <i class="material-icons text-danger text-gradient">looks_two</i>
                      </span>
                      <div class="timeline-content">
                        <h6 class="text-white text-sm font-weight-bold mb-0">
                          <a href="../pages/techniquelists.html"> Intermidiate </a>
                          <i class="fa fa-caret-down"></i>
                        </h6>
                        <p class="text-secondary font-weight-bold text-xs mt-1 mb-0">You gain quite a lot of techniques, huh?</p>
                      </div>
                    </div>

                    <div class="timeline-block mb-3">
                      <span class="timeline-step">
                        <i class="material-icons text-warning text-gradient">looks_3</i>
                      </span>
                      <div class="timeline-content">
                        <h6 class="text-white text-sm font-weight-bold mb-0">
                          <a href="../pages/techniquelists.html" > Advance </a>
                          <i class="fa fa-caret-down"></i>
                        </h6>
                        <p class="text-secondary font-weight-bold text-xs mt-1 mb-0">Congrats! You're almost master the art of Jiu-Jitsu!</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
			</div>
			<div id="search-result" class="card h-100 bg-dark-200" style="display:none;">



            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
  <script>
	  var box = document.getElementById("graph-box");
	  var pos = [
		  [.500,.125],
		  [.166,.375],
		  [.833,.375],
		  [.50,.375],
		  [.166,.625],
		  [.833,.625],
		  [.166,.875],
		  [.833,.875],
		  [.5,.875]
	  ];
	  for(var x = 0; x < 9; x++)
	  {
		  for(var y = x + 1; y < 9; y++)
		  {
			  var n = document.createElement("div");
			  n.classList.add("transition-line");
			  n.id = (x + 1) + "-" + (y + 1);
			  n.style.width = (100 * Math.sqrt(((pos[x][1] - pos[y][1]) * (pos[x][1] - pos[y][1])) + ((pos[x][0] - pos[y][0]) * (pos[x][0] - pos[y][0])))).toString() + "%";
			  n.style.left = (100 * (pos[x][0] + pos[y][0]) / 2).toString() + "%";
			  n.style.top = (100 * (pos[x][1] + pos[y][1]) / 2).toString() + "%";
			  n.style.transform = "translate(-50%, -50%) rotate(" + Math.atan((pos[x][1] - pos[y][1]) / ((box.offsetWidth / 400) * (pos[x][0] - pos[y][0]))) + "rad)";
			  box.appendChild(n);
			  // Math.atan
		  }
	  }
  </script>
  <script type="module">
	  import * as THREE from 'https://threejsfundamentals.org/threejs/resources/threejs/r122/build/three.module.js';
    import {OrbitControls} from 'https://threejsfundamentals.org/threejs/resources/threejs/r122/examples/jsm/controls/OrbitControls.js';
    import {GLTFLoader} from 'https://threejsfundamentals.org/threejs/resources/threejs/r122/examples/jsm/loaders/GLTFLoader.js';


	export const input = {a: []};
	export const result = {a: []};
	export const playback = {a: 1.0};
	export const playbackB = {a: 1.0};

    // takes list of moves in order, and two colors for animation sequence
    async function playAnimations(input)
    {
    let currentAnim = 0;
    let flag = 0;
    let counter = 0;
    let animCounter = 0;
    let timeCounter = 0;

    const objectUrl = new URL('/Jiu-Jitsu.glb', import.meta.url);

	console.log(input);

    let numInput = input.length;

    // WILL BE EXPANDED
    const anims = {};
    anims['Inside Trip'] = {name: 'Inside Trip', mult: 1.0, f: false, a: null, b: null, j: 1, k: 5};
    anims['Half Guard Kimura'] = {name: 'Kimura From Half', mult: 1.0, f: false, a: null,b: null, j: 5, k: 9};
    anims['Double Leg'] = {name: 'Double Leg', mult: .50, f: false, a: null,b: null, j: 1, k: 6};
    anims['Toreando Pass'] = {name: 'Torreando Pass', mult: 0.5, f: false, a: null,b: null, j: 2, k: 6};
    anims['Guard Break'] = {name: 'Guard Break', mult: 0.5, f: false, a: null,b: null, j: 3, k: 4};
    anims['Back Take from Mount'] = {name: 'Back Take From Mount', mult: 0.4, f: false, a: null,b: null, j: 7, k: 8};
	
	anims['Pull Closed Guard'] = {name: 'Pull Closed Guard', mult: 0.4, f: false, a: null,b: null, j: 3, k: 4};
	anims['Frame Guard Triangle'] = {name: 'Framge Guard Triangle', mult: 0.4, f: false, a: null,b: null, j: 4, k: 9};
	anims['Bump Sweep'] = {name: 'Bump Sweep', mult: 0.4, f: true, a: null,b: null, j: 3, k: 7};
	anims['Scissor Sweep'] = {name: 'Scissor Sweep', mult: 0.4, f: true, a: null,b: null, j: 3, k: 7};
	anims['Kimura from Guard'] = {name: 'Kimura From Guard', mult: 0.4, f: false, a: null,b: null, j: 3, k: 9};
	anims['Omoplata from Guard'] = {name: 'Omoplata From Guard', mult: 0.4, f: false, a: null,b: null, j: 3, k: 9};
	anims['Triangle from Guard'] = {name: 'Triangle From Guard', mult: 0.4, f: false, a: null,b: null, j: 3, k: 9};
	anims['Standing Knee Cut Pass'] = {name: 'Standing Knee Cut Pass', mult: 0.4, f: false, a: null,b: null, j: 2, k: 6};
	anims['Hip Throw'] = {name: 'Hip Throw', mult: 0.4, f: false, a: null,b: null, j: 1, k: 6};
	anims['Armbar from Guard'] = {name: 'Armbar From Guard', mult: 0.4, f: false, a: null,b: null, j: 3, k: 9};
	anims['Standing Guard Break'] = {name: 'Standing Guard Break', mult: 0.4, f: false, a: null,b: null, j: 2, k: 3};
	anims['Tripod Sweep'] = {name: 'Tripod Sweep', mult: 0.4, f: false, a: null,b: null, j: 2, k: 2};
    var numAnim = anims.length;

    // WILL BE EXPANDED
    const colorList = {};
    colorList['blue'] = {r: 0.0, g: 0.0, b: 0.77, isColor: true};
    colorList['red'] = {r: 0.77, g: 0.0, b: 0.0, isColor: true};
    colorList['green'] = {r: 0.0, g: 0.77, b: 0.0, isColor: true};
    var numColors = colorList.length;

    var colors = [colorList[colorA],colorList[colorB]];

    var flip = false;

    const renderer = new THREE.WebGLRenderer();

	// INITIALIZE GRAPH
	var lines = document.getElementsByClassName("transition-line");
	for(var x = 0; x < lines.length; x++)
	{
		lines[x].style.display = "none";
		lines[x].style.zindex = "1";
		lines[x].style.backgroundColor = "#000";
	}
	for(var x = 0; x < input.length; x++)
	{
		var line = document.getElementById((anims[input[x].Name].j) + "-" + (anims[input[x].Name].k));
		line.style.display = "block";
	}

    renderer.setSize(window.innerWidth/2, window.innerHeight/2);

    document.getElementById("animation-player").appendChild(renderer.domElement);

    const scene = new THREE.Scene();
    scene.background = new THREE.Color(0xFFFFFF);
    const camera = new THREE.PerspectiveCamera(
  	75,
  	window.innerWidth / window.innerHeight,
  	0.1,
  	1000
    );

    camera.position.set(25, 10, 0);

    const controls = new OrbitControls(camera, renderer.domElement);
    controls.update();

    const assetLoader = new GLTFLoader();

    const directionalLight = new THREE.DirectionalLight(0xFFFFFF, 0.9);
    scene.add(directionalLight);

    let mixer;
    let clip_A;
    let clip_B;
    let clips;
    let actions = [];
    let actionsC = [];

    assetLoader.load(objectUrl.href, function(gltf) {
  	const model = gltf.scene;
  	scene.add(model);
  	mixer = new THREE.AnimationMixer(model);
  	clips = gltf.animations;
  	console.log(gltf);

  	for(var x in anims)
  	{
  	let subActions = [];
  	console.log(anims[x].name.replaceAll(" ", "_") + '_A');
  	clip_A = THREE.AnimationClip.findByName(clips, anims[x].name.replaceAll(" ", "_") + '_A');
  	console.log(clip_A);
  	let action_A = mixer.clipAction(clip_A);
  	action_A.setLoop(THREE.LoopOnce);
  	action_A.clampWhenFinished = true;
  	action_A.enable = true;
  	console.log(anims[x].name.replaceAll(" ", "_") + '_B');
  	clip_B = THREE.AnimationClip.findByName(clips, anims[x].name.replaceAll(" ", "_") + '_B');
  	console.log(clip_B);
  	let action_B = mixer.clipAction(clip_B);
  	action_B.setLoop(THREE.LoopOnce);
  	action_B.clampWhenFinished = true;
  	action_B.enable = true;
  	anims[x].a = action_A;
  	anims[x].b = action_B;
  	}
  	play();
    }, undefined, function(error) {
    });

    function play()
    {
  	mixer.stopAllAction();
  	if(flip)
  	{
  		let x = colors[0];
  		colors[0] = colors[1];
  		colors[1] = x;
  		flip = false;
  	}
	var lines = document.getElementsByClassName("transition-line");
	for(var x = 0; x < lines.length; x++)
	{
		lines[x].style.backgroundColor = "#000";
		lines[x].style.zindex = "1";
	}
	var line = document.getElementById((anims[input[animCounter].Name].j) + "-" + (anims[input[animCounter].Name].k));
	line.style.zindex = "2";
	line.style.backgroundColor = "#FF0";
	var desc = document.getElementById("description");
	desc.innerHTML = "<h2 style='color:#000;'>" + input[animCounter].Name + "</h2><br/><div style='color:#000;'>" + input[animCounter].Description + "</div>";
  	flip = anims[input[animCounter].Name].f;
  	mixer._root.children[0].children[12].children[3].material.color = colors[0];
  	mixer._root.children[1].children[12].children[3].material.color = colors[1];
  	anims[input[animCounter].Name].a.play();
  	anims[input[animCounter].Name].b.play();
  	animCounter = (animCounter + 1) % numInput;
  	console.log("PLAYING " + animCounter);
    }

    const clock = new THREE.Clock();
    function animate()
    {
  	if(mixer)
  	{
		console.log((numInput + animCounter - 1) % numInput);
		console.log(input[(numInput + animCounter - 1) % numInput]);
  		mixer.update(clock.getDelta() * 1.5 * playback.a * anims[input[(numInput + animCounter - 1) % numInput].Name].mult);
  		if(flag == 0)
  		{
  			flag = 1;
  			mixer.addEventListener( 'finished', function(e)
  			{
  				play();
  			});
  		}
  	}
  	controls.update();
  	renderer.render(scene, camera);
    }

    renderer.setAnimationLoop(animate);
    }

    const inp = ['Back_Take_From_Mount', 'Torreando_Pass', 'Guard_Break', 'Double_Leg', 'Inside_Trip', 'Kimura_From_Half'];
    const colorA = 'red';
    const colorB = 'blue';

    //playAnimations(inp, colorA, colorB);


	  import * as f from '../javascript/functions.js';
	  var search = document.getElementById("search-field");
	  search.addEventListener('input', function(){f.search(input, result);});
	  search.addEventListener('propertychange', function(){f.search(input, result);});
	  var play = document.getElementById("play");
	  play.addEventListener('click', function(){playAnimations(input.a)});
	  var clear = document.getElementById("clear");
	  clear.addEventListener('click', function(){let x = document.getElementById("move-buffer"); x.innerHTML = ""; input.a = [];});
	  var pause = document.getElementById("pause");
	  pause.addEventListener('click', function(){if(playback.a == 0.0){playback.a = playbackB.a; playbackB.a = 0.0;}else{playbackB.a = playback.a; playback.a = 0.0;}});
	  var slider  = document.getElementById("jared");
	  slider.addEventListener('change', function(){playback.a = slider.value;});
	  var load = document.getElementById("load");
	  load.addEventListener('click', function(){f.loadMoves(input);});
	  var save = document.getElementById("save");
	  save.addEventListener('click', function(){f.saveMoves(input);});
	  var logout = document.getElementById("logout");
	  logout.addEventListener('click', function(){f.logout();});

	  var signin = document.getElementById("sign-in");
	  var logout = document.getElementById("logout");
	  if(localStorage.getItem('token'))
	  {
		  signin.style.display = "none";
		  logout.style.display = "block";
	  }
	  logout.addEventListener('click', f.logout);
  </script>
  <!--   Core JS Files   -->
  <!-- script src="./assets/js/core/popper.min.js"></script>
  <script src="./assets/js/core/bootstrap.min.js"></script>
  <script src="./assets/js/plugins/perfect-scrollbar.min.js"></script>
  <script src="./assets/js/plugins/smooth-scrollbar.min.js"></script>
  <script src="./assets/js/plugins/chartjs.min.js"></script -->
  <script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
      var options = {
        damping: '0.5'
      }
      Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
  </script>
  <!-- Github buttons -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
  <script src="../assets/js/material-dashboard.min.js?v=3.0.0"></script>
</body>

</html>
